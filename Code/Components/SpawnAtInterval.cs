// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace uFrameECSDemo {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using uFrame.ECS;
    using UniRx;
    
    
    [uFrame.Attributes.uFrameIdentifier("f1355431-0026-4903-8a1a-c80b46b0f183")]
    public partial class SpawnAtInterval : uFrame.ECS.EcsComponent {
        
        private Subject<Single> _SpeedObservable;
        
        private Subject<GameObject> _PrefabObservable;
        
        private Subject<Transform> _ParentObservable;
        
        [UnityEngine.SerializeField()]
        private Single _Speed;
        
        [UnityEngine.SerializeField()]
        private GameObject _Prefab;
        
        [UnityEngine.SerializeField()]
        private Transform _Parent;
        
        public int ComponentID {
            get {
                return 8;
            }
        }
        
        public IObservable<Single> SpeedObservable {
            get {
                if (_SpeedObservable == null) {
                    _SpeedObservable = new Subject<Single>();
                }
                return _SpeedObservable;
            }
        }
        
        public IObservable<GameObject> PrefabObservable {
            get {
                if (_PrefabObservable == null) {
                    _PrefabObservable = new Subject<GameObject>();
                }
                return _PrefabObservable;
            }
        }
        
        public IObservable<Transform> ParentObservable {
            get {
                if (_ParentObservable == null) {
                    _ParentObservable = new Subject<Transform>();
                }
                return _ParentObservable;
            }
        }
        
        public Single Speed {
            get {
                return _Speed;
            }
            set {
                _Speed = value;
                if (_SpeedObservable != null) {
                    _SpeedObservable.OnNext(value);
                }
            }
        }
        
        public GameObject Prefab {
            get {
                return _Prefab;
            }
            set {
                _Prefab = value;
                if (_PrefabObservable != null) {
                    _PrefabObservable.OnNext(value);
                }
            }
        }
        
        public Transform Parent {
            get {
                return _Parent;
            }
            set {
                _Parent = value;
                if (_ParentObservable != null) {
                    _ParentObservable.OnNext(value);
                }
            }
        }
    }
}
