// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace uFrameECSDemo {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UniRx;
    using uFrame.ECS;
    using uFrame.Kernel;
    
    
    public partial class WeaponSystem : uFrame.ECS.EcsSystem, uFrame.ECS.ISystemUpdate {
        
        private IEcsComponentManagerOf<ShootingGuns> _ShootingGunsManager;
        
        public IEcsComponentManagerOf<ShootingGuns> ShootingGunsManager {
            get {
                return _ShootingGunsManager;
            }
            set {
                _ShootingGunsManager = value;
            }
        }
        
        public override void Setup() {
            base.Setup();
            ShootingGunsManager = ComponentSystem.RegisterGroup<ShootingGunsGroup,ShootingGuns>();
            ShootingGunsManager.CreatedObservable.Subscribe(ShootingGunsComponentCreatedFilter).DisposeWith(this);
            ShootingGunsManager.RemovedObservable.Subscribe(_=>ShootingGunsComponentDestroyed(_,_)).DisposeWith(this);
        }
        
        protected void WeaponSystemUpdateHandler(ShootingGuns group) {
            var handler = new WeaponSystemUpdateHandler();
            handler.System = this;
            handler.Group = group;
            StartCoroutine(handler.Execute());
        }
        
        protected void WeaponSystemUpdateFilter() {
            var ShootingGunsItems = ShootingGunsManager.Components.GetEnumerator();
            for (
            ; ShootingGunsItems.MoveNext(); 
            ) {
                this.WeaponSystemUpdateHandler(ShootingGunsItems.Current);
            }
        }
        
        public virtual void SystemUpdate() {
            WeaponSystemUpdateFilter();
        }
        
        protected void ShootingGunsComponentCreated(ShootingGuns data, ShootingGuns group) {
            var handler = new ShootingGunsComponentCreated();
            handler.System = this;
            handler.Event = data;
            handler.Group = group;
            StartCoroutine(handler.Execute());
        }
        
        protected void ShootingGunsComponentCreatedFilter(ShootingGuns data) {
            var GroupItem = ShootingGunsManager[data.EntityId];
            if (GroupItem == null) {
                return;
            }
            this.ShootingGunsComponentCreated(data, GroupItem);
        }
        
        protected void ShootingGunsComponentDestroyed(ShootingGuns data, ShootingGuns group) {
            var handler = new ShootingGunsComponentDestroyed();
            handler.System = this;
            handler.Event = data;
            handler.Group = group;
            StartCoroutine(handler.Execute());
        }
        
        protected void ShootingGunsComponentDestroyedFilter(ShootingGuns data) {
            var GroupItem = ShootingGunsManager[data.EntityId];
            if (GroupItem == null) {
                return;
            }
            this.ShootingGunsComponentDestroyed(data, GroupItem);
        }
    }
}
