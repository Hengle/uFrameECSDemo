// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace uFrameECSDemo {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.Kernel;
    using UniRx;
    using uFrame.ECS;
    
    
    public partial class WeaponSystem : uFrame.ECS.EcsSystem, uFrame.ECS.ISystemUpdate {
        
        private IEcsComponentManagerOf<GunnerInput> _GunnerInputManager;
        
        private IEcsComponentManagerOf<Gunner> _GunnerManager;
        
        public IEcsComponentManagerOf<GunnerInput> GunnerInputManager {
            get {
                return _GunnerInputManager;
            }
            set {
                _GunnerInputManager = value;
            }
        }
        
        public IEcsComponentManagerOf<Gunner> GunnerManager {
            get {
                return _GunnerManager;
            }
            set {
                _GunnerManager = value;
            }
        }
        
        public override void Setup() {
            base.Setup();
            GunnerInputManager = ComponentSystem.RegisterComponent<GunnerInput>();
            GunnerManager = ComponentSystem.RegisterComponent<Gunner>();
            this.OnEvent<uFrameECSDemo.GunnerFire>().Subscribe(_=>{ WeaponSystemGunnerFireFilter(_); }).DisposeWith(this);
        }
        
        protected void WeaponSystemGunnerFireHandler(uFrameECSDemo.GunnerFire data, Gunner group, Gunner gunnerid) {
            var handler = new WeaponSystemGunnerFireHandler();
            handler.System = this;
            handler.Event = data;
            handler.Group = group;
            handler.GunnerId = gunnerid;
            StartCoroutine(handler.Execute());
        }
        
        protected void WeaponSystemGunnerFireFilter(uFrameECSDemo.GunnerFire data) {
            //var GroupGunner = GunnerManager[data.EntityId];
            //if (GroupGunner == null) {
            //    return;
            //}
            var GunnerIdGunner = GunnerManager[data.GunnerId];
            if (GunnerIdGunner == null) {
                return;
            }
            this.WeaponSystemGunnerFireHandler(data, null, GunnerIdGunner);
        }
        
        protected void WeaponSystemUpdateHandler(GunnerInput group) {
            var handler = new WeaponSystemUpdateHandler();
            handler.System = this;
            handler.Group = group;
            StartCoroutine(handler.Execute());
        }
        
        protected void WeaponSystemUpdateFilter() {
            var GunnerInputItems = GunnerInputManager.Components.GetEnumerator();
            for (
            ; GunnerInputItems.MoveNext(); 
            ) {
                this.WeaponSystemUpdateHandler(GunnerInputItems.Current);
            }
        }
        
        public virtual void SystemUpdate() {
            WeaponSystemUpdateFilter();
        }
    }
}
