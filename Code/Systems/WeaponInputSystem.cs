// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace uFrameECSDemo {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UniRx;
    using uFrameECSDemo;
    using uFrame.ECS;
    using uFrame.Kernel;
    
    
    [uFrame.Attributes.uFrameIdentifier("a97bf658-eb09-4340-8a9c-be005f8be076")]
    public partial class WeaponInputSystem : uFrame.ECS.EcsSystem, uFrame.ECS.ISystemUpdate {
        
        private IEcsComponentManagerOf<ShootingGuns> _ShootingGunsManager;
        
        private IEcsComponentManagerOf<PlayerGunner> _PlayerGunnerManager;
        
        private GunnerInputUpdateHandler GunnerInputUpdateHandlerInstance = new GunnerInputUpdateHandler();
        
        public IEcsComponentManagerOf<ShootingGuns> ShootingGunsManager {
            get {
                return _ShootingGunsManager;
            }
            set {
                _ShootingGunsManager = value;
            }
        }
        
        public IEcsComponentManagerOf<PlayerGunner> PlayerGunnerManager {
            get {
                return _PlayerGunnerManager;
            }
            set {
                _PlayerGunnerManager = value;
            }
        }
        
        public override void Setup() {
            base.Setup();
            ShootingGunsManager = ComponentSystem.RegisterGroup<ShootingGunsGroup,ShootingGuns>();
            PlayerGunnerManager = ComponentSystem.RegisterGroup<PlayerGunnerGroup,PlayerGunner>();
        }
        
        protected void GunnerInputUpdateHandler(PlayerGunner group) {
            var handler = GunnerInputUpdateHandlerInstance;
            handler.System = this;
            handler.Group = group;
            handler.Execute();
        }
        
        protected void GunnerInputUpdateFilter() {
            var PlayerGunnerItems = PlayerGunnerManager.Components;
            for (var PlayerGunnerIndex = 0
            ; PlayerGunnerIndex < PlayerGunnerItems.Count; PlayerGunnerIndex++
            ) {
                this.GunnerInputUpdateHandler(PlayerGunnerItems[PlayerGunnerIndex]);
            }
        }
        
        public virtual void SystemUpdate() {
            GunnerInputUpdateFilter();
        }
    }
}
