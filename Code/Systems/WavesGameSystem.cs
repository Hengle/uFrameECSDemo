// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace uFrameECSDemo {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using UniRx;
    using uFrame.Kernel;
    
    
    [uFrame.Attributes.uFrameIdentifier("9784e33b-b2d5-4aeb-ac8b-9273187d7c8b")]
    public partial class WavesGameSystem : uFrame.ECS.EcsSystem {
        
        private IEcsComponentManagerOf<SpawnAtInterval> _SpawnAtIntervalManager;
        
        private IEcsComponentManagerOf<SpawnMultipleAtInterval> _SpawnMultipleAtIntervalManager;
        
        private IEcsComponentManagerOf<PlayGameButton> _PlayGameButtonManager;
        
        private SpawnMultipleAtIntervalComponentCreated SpawnMultipleAtIntervalComponentCreatedInstance = new SpawnMultipleAtIntervalComponentCreated();
        
        private PlayGameButtonClickedHandler PlayGameButtonClickedHandlerInstance = new PlayGameButtonClickedHandler();
        
        private SpawnAtIntervalComponentCreated SpawnAtIntervalComponentCreatedInstance = new SpawnAtIntervalComponentCreated();
        
        public IEcsComponentManagerOf<SpawnAtInterval> SpawnAtIntervalManager {
            get {
                return _SpawnAtIntervalManager;
            }
            set {
                _SpawnAtIntervalManager = value;
            }
        }
        
        public IEcsComponentManagerOf<SpawnMultipleAtInterval> SpawnMultipleAtIntervalManager {
            get {
                return _SpawnMultipleAtIntervalManager;
            }
            set {
                _SpawnMultipleAtIntervalManager = value;
            }
        }
        
        public IEcsComponentManagerOf<PlayGameButton> PlayGameButtonManager {
            get {
                return _PlayGameButtonManager;
            }
            set {
                _PlayGameButtonManager = value;
            }
        }
        
        public override void Setup() {
            base.Setup();
            SpawnAtIntervalManager = ComponentSystem.RegisterComponent<SpawnAtInterval>();
            SpawnMultipleAtIntervalManager = ComponentSystem.RegisterComponent<SpawnMultipleAtInterval>();
            PlayGameButtonManager = ComponentSystem.RegisterComponent<PlayGameButton>();
            SpawnMultipleAtIntervalManager.CreatedObservable.Subscribe(SpawnMultipleAtIntervalComponentCreatedFilter).DisposeWith(this);
            this.OnEvent<uFrame.ECS.PointerClickDispatcher>().Subscribe(_=>{ PlayGameButtonClickedFilter(_); }).DisposeWith(this);
            SpawnAtIntervalManager.CreatedObservable.Subscribe(SpawnAtIntervalComponentCreatedFilter).DisposeWith(this);
        }
        
        protected void SpawnMultipleAtIntervalComponentCreated(SpawnMultipleAtInterval data, SpawnMultipleAtInterval group) {
            var handler = SpawnMultipleAtIntervalComponentCreatedInstance;;
            handler.System = this;
            handler.Event = data;
            handler.Group = group;
            handler.Execute();
        }
        
        protected void SpawnMultipleAtIntervalComponentCreatedFilter(SpawnMultipleAtInterval data) {
            var GroupSpawnMultipleAtInterval = SpawnMultipleAtIntervalManager[data.EntityId];
            if (GroupSpawnMultipleAtInterval == null) {
                return;
            }
            this.SpawnMultipleAtIntervalComponentCreated(data, GroupSpawnMultipleAtInterval);
        }
        
        protected void PlayGameButtonClickedHandler(uFrame.ECS.PointerClickDispatcher data, PlayGameButton group) {
            var handler = PlayGameButtonClickedHandlerInstance;;
            handler.System = this;
            handler.Event = data;
            handler.Group = group;
            handler.Execute();
        }
        
        protected void PlayGameButtonClickedFilter(uFrame.ECS.PointerClickDispatcher data) {
            var GroupPlayGameButton = PlayGameButtonManager[data.EntityId];
            if (GroupPlayGameButton == null) {
                return;
            }
            this.PlayGameButtonClickedHandler(data, GroupPlayGameButton);
        }
        
        protected void SpawnAtIntervalComponentCreated(SpawnAtInterval data, SpawnAtInterval group) {
            var handler = SpawnAtIntervalComponentCreatedInstance;;
            handler.System = this;
            handler.Event = data;
            handler.Group = group;
            handler.Execute();
        }
        
        protected void SpawnAtIntervalComponentCreatedFilter(SpawnAtInterval data) {
            var GroupSpawnAtInterval = SpawnAtIntervalManager[data.EntityId];
            if (GroupSpawnAtInterval == null) {
                return;
            }
            this.SpawnAtIntervalComponentCreated(data, GroupSpawnAtInterval);
        }
    }
}
